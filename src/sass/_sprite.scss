// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$menu-name: 'menu';
$menu-x: 19px;
$menu-y: 25px;
$menu-offset-x: -19px;
$menu-offset-y: -25px;
$menu-width: 11px;
$menu-height: 7px;
$menu-total-width: 57px;
$menu-total-height: 43px;
$menu-image: '../img/sprite.png';
$menu: (19px, 25px, -19px, -25px, 11px, 7px, 57px, 43px, '../img/sprite.png', 'menu', );
$search-2-name: 'search-2';
$search-2-x: 0px;
$search-2-y: 0px;
$search-2-offset-x: 0px;
$search-2-offset-y: 0px;
$search-2-width: 24px;
$search-2-height: 24px;
$search-2-total-width: 57px;
$search-2-total-height: 43px;
$search-2-image: '../img/sprite.png';
$search-2: (0px, 0px, 0px, 0px, 24px, 24px, 57px, 43px, '../img/sprite.png', 'search-2', );
$search-cancel-name: 'search-cancel';
$search-cancel-x: 0px;
$search-cancel-y: 25px;
$search-cancel-offset-x: 0px;
$search-cancel-offset-y: -25px;
$search-cancel-width: 18px;
$search-cancel-height: 18px;
$search-cancel-total-width: 57px;
$search-cancel-total-height: 43px;
$search-cancel-image: '../img/sprite.png';
$search-cancel: (0px, 25px, 0px, -25px, 18px, 18px, 57px, 43px, '../img/sprite.png', 'search-cancel', );
$search-name: 'search';
$search-x: 25px;
$search-y: 0px;
$search-offset-x: -25px;
$search-offset-y: 0px;
$search-width: 24px;
$search-height: 24px;
$search-total-width: 57px;
$search-total-height: 43px;
$search-image: '../img/sprite.png';
$search: (25px, 0px, -25px, 0px, 24px, 24px, 57px, 43px, '../img/sprite.png', 'search', );
$tab-active-name: 'tab-active';
$tab-active-x: 50px;
$tab-active-y: 0px;
$tab-active-offset-x: -50px;
$tab-active-offset-y: 0px;
$tab-active-width: 7px;
$tab-active-height: 11px;
$tab-active-total-width: 57px;
$tab-active-total-height: 43px;
$tab-active-image: '../img/sprite.png';
$tab-active: (50px, 0px, -50px, 0px, 7px, 11px, 57px, 43px, '../img/sprite.png', 'tab-active', );
$tab-name: 'tab';
$tab-x: 50px;
$tab-y: 12px;
$tab-offset-x: -50px;
$tab-offset-y: -12px;
$tab-width: 7px;
$tab-height: 11px;
$tab-total-width: 57px;
$tab-total-height: 43px;
$tab-image: '../img/sprite.png';
$tab: (50px, 12px, -50px, -12px, 7px, 11px, 57px, 43px, '../img/sprite.png', 'tab', );
$spritesheet-width: 57px;
$spritesheet-height: 43px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($menu, $search-2, $search-cancel, $search, $tab-active, $tab, );
$spritesheet: (57px, 43px, '../img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
